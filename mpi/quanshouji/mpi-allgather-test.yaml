apiVersion: kubeflow.org/v2beta1
kind: MPIJob
metadata:
  name: mpi-allgather-test
spec:
  slotsPerWorker: 1   # 每个 Worker 提供 1 个计算槽位
  runPolicy:
    cleanPodPolicy: Running
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        spec:
          containers:
            - name: launcher
              image: cyber1010/mpi-operator-riscv64:latest
              env:
                - name: OMPI_MCA_plm_rsh_agent
                  value: ":"   # 禁用 SSH 代理（容器内直接通信）
                - name: PMIX_MCA_gds
                  value: "hash"  # 确保 PMIx 通信兼容性
              command: ["bash", "-c"]
              args:
                - |
                  # 生成 MPI 程序源码
                  cat <<EOF > allgather_test.c
                  #include <mpi.h>
                  #include <stdio.h>
                  #include <stdlib.h>
                  int main(int argc, char** argv) {
                      MPI_Init(&argc, &argv);
                      int rank, size;
                      MPI_Comm_rank(MPI_COMM_WORLD, &rank);
                      MPI_Comm_size(MPI_COMM_WORLD, &size);
                      
                      // 每个进程生成自己的数据（rank + 1）
                      int local_data = rank + 1;
                      int *global_data = (int *)malloc(size * sizeof(int));
                      
                      // 执行全收集通信
                      MPI_Allgather(&local_data, 1, MPI_INT, 
                                    global_data, 1, MPI_INT, MPI_COMM_WORLD);
                      
                      // 每个进程打印收集到的数据
                      printf("[Rank %d] Collected data: ", rank);
                      for (int i = 0; i < size; i++) {
                          printf("%d ", global_data[i]);
                      }
                      printf("\n");
                      
                      free(global_data);
                      MPI_Finalize();
                      return 0;
                  }
                  EOF
                  
                  # 编译程序（仅在 Launcher 执行一次）
                  mpicc allgather_test.c -o allgather_test
                  
                  # 启动 MPI 进程（总进程数 = Worker数量 + Launcher自身）
                  mpirun --allow-run-as-root -n 4 ./allgather_test
    Worker:
      replicas: 3   # 3 个 Worker，每个提供 1 个槽位，总进程数 = 3 + 1（Launcher）= 4
      template:
        spec:
          containers:
            - name: worker
              image: cyber1010/mpi-operator-riscv64:latest
              env:
                - name: PMIX_MCA_gds
                  value: "hash"  # 确保 Worker 通信兼容性
              resources:
                limits:
                  cpu: "1"
                  memory: "512Mi"

